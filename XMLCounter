import org.w3c.dom.Document;
import org.w3c.dom.*;

import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.DocumentBuilder;

import org.xml.sax.SAXException;
import org.xml.sax.SAXParseException; 
import java.io.File;
import java.util.HashMap;
import java.util.Map;
import java.util.ArrayList;


public class xmlReader {
    
      public static void main (String argv []){
            System.out.println("Yo.,.My bad");
            
            ArrayList<String> names = new ArrayList<String>();
            Map<String,Integer> mpVote = new HashMap<String, Integer>();
            Map<String,String> mpCad = new HashMap<String, String>();
            Map<String,String> mpCadPrty = new HashMap<String, String>();
            
            Map<String,String> raceID1 = new HashMap<String, String>();
            Map<String,String> raceID2 = new HashMap<String, String>();
            Map<String,String> raceID3 = new HashMap<String, String>();
            Map<String,String> raceID4 = new HashMap<String, String>();
            Map<String,String> raceID5 = new HashMap<String, String>();
            Map<String,String> raceID6 = new HashMap<String, String>();
            Map<String,String> raceID7 = new HashMap<String, String>(); 
          
       try {
            DocumentBuilderFactory docBuilderFactory = DocumentBuilderFactory.newInstance();
            DocumentBuilder docBuilder = docBuilderFactory.newDocumentBuilder();
            Document xmlFile = docBuilder.parse (new File("vote_Feed.xml"));

            // normalize text representation
            xmlFile.getDocumentElement().normalize();
            System.out.println ("Root element of the doc is " + 
                 xmlFile.getDocumentElement().getNodeName());

          	xmlFile.getDocumentElement().normalize();

	System.out.println("Root element :" + xmlFile.getDocumentElement().getNodeName());

	NodeList nList = xmlFile.getElementsByTagName("race");

	System.out.println("----------------------------");

	for (int temp = 0; temp < nList.getLength(); temp++) {

		Node nNode = nList.item(temp);

		System.out.println("\nCurrent Element :" + nNode.getNodeName());

		if (nNode.getNodeType() == Node.ELEMENT_NODE) {

			Element eElement = (Element) nNode;
                        
                        System.out.println("writeIn : " + eElement.getElementsByTagName("write_in").item(0).getTextContent());
                        String writeIn = eElement.getElementsByTagName("write_in").item(0).getTextContent();
                       	
                        System.out.println("Name : " + eElement.getElementsByTagName("name").item(0).getTextContent());
                        String cadName = eElement.getElementsByTagName("name").item(0).getTextContent(); 
                        
                        if(writeIn.equals("yes"))
                           { if (mpCad.containsKey(cadName))
                                { mpVote.put(cadName, (mpVote.get(cadName) +1) ); }
                             else 
                                { mpCad.put(cadName,cadName);
                                  mpVote.put(cadName, 1);
                                  names.add(cadName);}
                            }
                        else
                          {  System.out.println("id : " + eElement.getElementsByTagName("id").item(0).getTextContent());
                             String cadID = eElement.getElementsByTagName("id").item(0).getTextContent();
                             System.out.println("party : " + eElement.getElementsByTagName("party").item(0).getTextContent());
                             String party = eElement.getElementsByTagName("id").item(0).getTextContent();
                             
                             if(mpCad.containsKey(cadID))
                               { mpVote.put(cadID, (mpVote.get(cadID) + 1) ); }
                             else
                               { mpCad.put(cadID, cadName);
                                 mpCadPrty.put(cadID, party);
                                 mpVote.put(cadID, 1);
                                 names.add(cadName);}
                           }                    
		                    }
                    }
                 } catch (Exception e) {
                       e.printStackTrace();}
 
                System.out.println("I hate netbeans");
                for (int t=0; t<names.size();t++)
                { System.out.println("Number of votes for "+names.get(t));
                 System.out.println(mpVote.get(names.get(t))); }
            /*this part is still broken*/
    
            }//end of main


    
    
}
